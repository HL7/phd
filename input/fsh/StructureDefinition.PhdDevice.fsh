Alias: $ASN1attribute = http://hl7.org/fhir/uv/phd/ValueSet/ASN1attribute
Alias: $Quantity11073MDC = http://hl7.org/fhir/uv/phd/ValueSet/Quantity11073MDC
Alias: $CodeableConcept11073MDC = http://hl7.org/fhir/uv/phd/ValueSet/CodeableConcept11073MDC

Profile: PhdDevice
Parent: Device
Id: PhdDevice
Description: "Base StructureDefinition for the Device Resource for a PHD"
* ^meta.lastUpdated = "2017-10-16T05:03:37.38-04:00"
* ^url = "http://hl7.org/fhir/uv/phd/StructureDefinition/PhdDevice"
* ^status = #draft
* ^date = "2017-07-07T11:39:51.3383228-04:00"
* ^purpose = "This resource describes the primary features of a Personal Health Device (PHD). It contains the properties, production specification, specializations, and overall type of the PHD."
* . ^definition = "The characteristics, operational status and capabilities of a medical-related component of a medical device. A PHD is JUST the medical-related component."
  * ^comment = "For the initial scope, this Device resource is only applicable to describe a single node in the containment tree that is produced by the context scanner in any medical device that implements or derives from the ISO/IEEE 11073 standard and that does not represent a metric. Examples for such a node are MDS, VMD, or Channel.\r\n\r\nWith PHD medical units, there is no medical scanner and the unit is only a single node, a single 'simple' MDS, and it is static. Thus a PHD has no parent 'Device'.  When a PHD supports multiple device specializations, the single unit description is still the case. A specialization is just an way to organize a set of metric objects that tend to be generated by a single sensor, but the device could expose metric objects from several specializations which usually means it has more than one sensor. In PHDs multiple specialization support is rare."
* meta 1..
  * profile ^slicing.discriminator[0].type = #value
    * ^slicing.discriminator[=].path = "value"
    * ^slicing.rules = #open
  * profile contains phdProfile 1..1
  * profile[phdProfile] = "http://hl7.org/fhir/uv/phd/StructureDefinition/PhdDevice" (exactly)
* identifier ^slicing.discriminator[0].type = #value
  * ^slicing.discriminator[=].path = "type.coding.system"
  * ^slicing.discriminator[+].type = #value
  * ^slicing.discriminator[=].path = "type.coding.code"
  * ^slicing.rules = #open
  * ^short = "Information that uniquely describes the personal health device"
  * ^definition = "The assigned unique identification of the device that is semantically meaningful outside of the FHIR resource context. An example would be the IEEE EUI-64 System-Id or transport address. For PHDs the systemIdentifier is required and the transportAddressIdentifier is highly recommended as this is what most end users see and can obtain from the device itself or device packaging."
  * ^alias = "11073-20601 System id, transport address, etc."
* identifier contains
    systemIdIdentifier 1..1 and
    btmacAddressIdentifier 0..1 and
    macAddressIdentifier 0..1
* identifier[systemIdIdentifier] ^short = "System Id identifier"
  * ^definition = "This entry contains the IEEE EUI-64. If absent (bad device) set to all zeros."
  * ^alias = "11073-20601 System id"
  * type 1..
    * coding 1..1
      * ^short = "Indicates this is the IEEE 11073 System Id identifier"
      * system 1..
      * system = "http://hl7.org/fhir/uv/phd/CodeSystem/ContinuaDeviceIdentifiers" (exactly)
      * code 1..
      * code = #SYSID (exactly)
  * system 1..
  * system = "urn:oid:1.2.840.10004.1.1.1.0.0.1.0.0.1.2680" (exactly)
    * ^short = "EUI-64 system identifier"
    * ^definition = "Identifies the system as an IEEE EUI."
  * value 1..
    * ^short = "System id value from System-Id attribute"
    * ^definition = "The System id from the System-Id attribute as an 8-byte HEX string where each byte is separated by dashes, for example FE-ED-AB-EE-DE-AD-77-C3. "
    * ^comment = "The formatting is specified in the IEEE document Guidelines for 64-bit Global Identifier.\r\n\r\nTo allow the mapping of non-compliant proprietary devices that do not provide a system id, the value is set to all zeros in the same format, 00-00-00-00-00-00-00-00"
* identifier[btmacAddressIdentifier] ^short = "Bluetooth MAC Transport address identifier"
  * ^definition = "This entry contains the Bluetooth MAC transport address."
  * ^alias = "Bluetooth MAC Transport address"
  * type 1..
    * coding 1..1
      * ^short = "Indicates this is the Bluetooth Mac address identifier"
      * system 1..
      * system = "http://hl7.org/fhir/uv/phd/CodeSystem/ContinuaDeviceIdentifiers" (exactly)
      * code 1..
      * code = #BTMAC (exactly)
  * system 1..
  * system = "http://hl7.org/fhir/sid/eui-48/bluetooth" (exactly)
  * value 1..
    * ^definition = "The Bluetooth MAC as an EUI-48 such as 00-E5-DE-AD-77-C3. "
    * ^comment = "Transport addresses are supposed to be unique for a given device."
* identifier[macAddressIdentifier] ^short = "MAC Transport address identifier"
  * ^definition = "This entry contains the MAC transport address."
  * ^alias = "MAC Transport address"
  * type 1..
    * coding 1..1
      * ^short = "Indicates this is the Mac address identifier"
      * system 1..
      * system = "http://hl7.org/fhir/uv/phd/CodeSystem/ContinuaDeviceIdentifiers" (exactly)
      * code 1..
      * code = #ETHMAC (exactly)
  * system 1..
  * system = "http://hl7.org/fhir/sid/eui-48/ethernet" (exactly)
  * value 1..
    * ^definition = "The MAC as an EUI-48 such as 00-E5-DE-AD-77-C8. "
    * ^comment = "Transport addresses are supposed to be unique for a given device."
* manufacturer 1..
  * ^short = "Manufacturer name from System-Model.manufacturer"
  * ^definition = "The manufacturer name as reported by the System-Model attribute."
  * ^comment = "The System-Model attribute is required by the IEEE 11073-20601 specification"
* serialNumber ^short = "Serial number from the Production-Specification attribute"
  * ^definition = "The serial number as reported by the Production-Specification attribute."
  * ^comment = "The Production-Specification is optional in the 11073-20601 specification but required by Continua. A Continua certified PHD shall report a serial number. The serial number shall be mapped if the PHD reports it."
* modelNumber 1..
  * ^short = "Model number from System-Model.model"
  * ^definition = "The model number as reported by the System-Model attribute."
  * ^comment = "The System-Model attribute is required by the IEEE 11073-20601 specification"
* partNumber ^short = "Part number from the Production-Specification attribute"
  * ^definition = "The part number as reported by the Production-Specification attribute."
  * ^comment = "The Production-Specification is optional in the 11073-20601 specification. This element shall be mapped if the PHD reports it"
* type 1..
  * ^short = "Indicates the device is a PHD."
  * coding ^slicing.discriminator[0].type = #value
    * ^slicing.discriminator[=].path = "system"
    * ^slicing.rules = #open
  * coding contains MDCType 1..1
  * coding[MDCType] ^short = "Required MDC code system entry"
    * ^definition = "The IEEE 11073-10101 code for the PHD simple MDS."
    * system 1..
    * system = "urn:iso:std:iso:11073:10101" (exactly)
      * ^short = "Identifies IEEE 11073-10101 coding system"
      * ^definition = "This value identifies the IEEE 11073-10101 coding system"
    * code 1..
    * code = #65573 (exactly)
      * ^short = "Indicates PHD"
      * ^definition = "The code for a Simple MDS indicating that this unit is a personal health device"
  * text ^definition = "A human readable display describing the meaning of the MDC code."
    * ^comment = "It is suggested that this element contain the reference identfier for Simple MDS 'MDC_MOC_VMS_MDS_SIMP'."
* specialization 1..
  * ^short = "This element contains an entry for each supported specialization"
  * ^comment = "There shall be a specialization entry for each specialization reported in the required System-Type-Spec-List attribute. A specialization in this case defines not only what type of measurements the PHD reports but that the PHD reports these measurements according to one of the 11073-114xx specialization standards. Most PHDs support only a single specialization such as the Blood Pressure or Pulse Oximeter specialization."
  * systemType ^short = "The specialization standard supported by the PHD."
    * ^comment = "The specialization.specType comes from the System-Type-Spec-List specialization entry 'type'. "
    * coding ^slicing.discriminator[0].type = #value
      * ^slicing.discriminator[=].path = "system"
      * ^slicing.rules = #open
    * coding contains MDCType 1..1
    * coding[MDCType] ^short = "Required MDC code system entry for specializations"
      * system 1..
      * system = "urn:iso:std:iso:11073:10101" (exactly)
        * ^short = "The 11073-10101 system identifier"
      * code 1..
        * ^short = "The 11073-10101 specialization code from a System-Type-Spec-List[i].type."
  * version 1..
    * ^short = "The version of the specialization standard supported by the PHD from the System-Type-Spec-List[i].version"
    * ^comment = "The version of the specialization comes from the System-Type-Spec-List specialization entry. If a PHD supports multiple versions of the same specialization a separate Device.specialization entry is needed where the systemType elements are repeated. If the PHD reports a generic specialization (follows no 114xx specialization but conforms to the 11072-20601 standard, the version is the 20601 protocol version."
* version ^short = "A PHD may report firmware, hardware, software, internal protocol, and Continua versions."
  * ^comment = "There are several versions that are reported from a PHD. Firmware, Hardware, Protocol (internal, not 20601), and Software versions come from the Production-Specification attribute. The Continua version comes from the Reg-Cert-Data-List attribute. Continua compliant PHDs report at least a firmware and Continua version. A separate version entry is needed for each of the versions reported by the PHD."
  * type 1..
    * coding ^slicing.discriminator[0].type = #value
      * ^slicing.discriminator[=].path = "system"
      * ^slicing.rules = #open
    * coding contains MDCType 1..1
    * coding[MDCType] ^short = "Required MDC code system entry"
      * system 1..
      * system = "urn:iso:std:iso:11073:10101" (exactly)
        * ^short = "Indicates the codes come from the MDC coding system"
      * code 1..
        * ^short = "A code indicating the type of version the Device.version.value refers to."
        * ^comment = "The currently defined version codes used in this element are as shown in the Table. More than one of these versions may be reported by a PHD. Each version reported by the PHD shall be encoded.\r\n\r\n       Description                   CODE             Reference Identifier\r\n       ------------------------------------------------------------------------------------\r\n       Hardware revision            531974            MDC_ID_PROD_SPEC_HW\r\n       Software revision            531975            MDC_ID_PROD_SPEC_SW\r\n       Firmware revision            531976            MDC_ID_PROD_SPEC_FW\r\n       Protocol                     531977            MDC_ID_PROD_SPEC_PROTOCOL\r\n       Continua version             532352            MDC_REG_CERT_DATA_CONTINUA_VERSION\r\n       The Continua version comes from the Continua Reg-Cert-Data-List attribute\r\n"
  * value ^short = "The version"
* property ^slicing.discriminator[0].type = #value
  * ^slicing.discriminator[=].path = "type"
  * ^slicing.rules = #open
* property contains
    bitProperties 0..* and
    quantitiesProperty 0..* and
    codedListProperties 0..*
* property[bitProperties] ^short = "Properties reported in BITs fields"
  * ^definition = "For each bit setting reported a BITs value, a bitProperties element is used."
  * ^comment = "A BITs measurement is a 16 or 32-bit ASN1 BITs value where each bit means something. "
  * type from $ASN1attribute (required)
    * ^short = "Tells what the BITs item is"
    * ^definition = "One of the capabilities reported in the Mds-Time-Info.mds-time-caps-state or Reg-Cert-Data-List.regulation-status field."
    * ^comment = "Only set 'event' types need be reported. Both set and cleared 'state' types need to be reported. The regulation status is as state type. All time capabilities are event types"
    * coding 1..1
      * ^short = "Required ASN1 code system entry"
      * system 1..
      * system = "http://hl7.org/fhir/uv/phd/CodeSystem/ASN1ToHL7" (exactly)
      * code 1..
        * ^definition = "The ASN1 code made from the code and the Mder bit position"
        * ^comment = "The MDC code for the mds-time-caps-state field is 68219. Thus the ASN1 code for the case 'device supports a relative time clock', Mder bit 2, would be 68219.2. For the regulation status field the MDC code is 532354, and only bit 0 is defined. However, the regulated status is when the bit is cleared and the unregulated status is when the bit is set. That choice can be confusing."
    * text ^definition = "It is recommended to display at least the ASN1 name for the given bit meaning"
  * valueQuantity ..0
  * valueCode 1..1
    * coding ^slicing.discriminator[0].type = #value
      * ^slicing.discriminator[=].path = "system"
      * ^slicing.rules = #open
    * coding contains V2Binary 1..1
    * coding[V2Binary] ^short = "Required V2 Binary code system entry"
      * system 1..
      * system = "http://terminology.hl7.org/CodeSystem/v2-0136" (exactly)
      * code 1..
        * ^definition = "If bit is set, code contains Y if cleared, N"
* property[quantitiesProperty] ^short = "The device properties represented by quantities such as clock resolution"
  * ^definition = "This element represents all those time properties that are a quantity such as the various clock resolutions and synchronization accuracy."
  * ^comment = "If the PHD reports that one of these given properties are unknown, this element shall not be populated for that property."
  * type from $Quantity11073MDC (required)
    * ^short = "The type of time quantity"
    * coding ^slicing.discriminator[0].type = #value
      * ^slicing.discriminator[=].path = "system"
      * ^slicing.rules = #open
    * coding contains MDCType 1..1
    * coding[MDCType] ^short = "The 11073-10101 MDC code for the type"
      * system 1..
      * system = "urn:iso:std:iso:11073:10101" (exactly)
      * code 1..
        * ^definition = "The MDC code representing the property"
        * ^comment = "Currently PHDs support the reporting of the time quantities as shown in the Table. More may be added in the future\r\n\r\n       Description                        CODE            Reference Identifier\r\n       ------------------------------------------------------------------------------------\r\n       Absolute clock resolution         68222            MDC_TIME_RES_ABS\r\n       Base-offset clock resolution      68226            MDC_TIME_RES_BO\r\n       Relative time resolution          68223            MDC_TIME_RES_REL\r\n       Hi Res relative time resolution   68224            MDC_TIME_RES_REL_HI_RES\r\n       Time sync accuracy                68221            MDC_TIME_SYNC_ACCURACY\r\n       Tick Resolution                   68229            MDC_ATTR_TICK_RES\r\n"
    * text ^definition = "It is recommended to display at least the MDC reference identifier for the MDC code"
  * valueQuantity 1..1
    * ^definition = "The value. All the time fields are scaled to microseconds"
    * system 1..
    * system = "http://unitsofmeasure.org" (exactly)
      * ^definition = "The unit code shall use the UCUM system"
    * code 1..
    * code = #us (exactly)
      * ^definition = "The UCUM code (for microseconds it is 'us')"
  * valueCode ..0
* property[codedListProperties] ^short = "The device properties represented by a list of codes such as the list of certified PHD or H-FS interfaces"
  * ^definition = "This element represents all those properties that are a list of codes. At the moment there is only certified PHD interfaces."
  * ^comment = "Continua certified PHDs are required to have these entries."
  * type from $CodeableConcept11073MDC (required)
    * ^short = "What the coded list is"
    * coding 1..
      * ^short = "Required MDC code system entry"
      * system 1..
      * system = "urn:iso:std:iso:11073:10101" (exactly)
      * code 1..
        * ^definition = "The MDC code representing the property"
        * ^comment = "Currently PHDs support the reporting of one of the coded lists as shown in the Table. More may be added in the future\r\n\r\n       Description                CODE    Reference Identifier                           Code System\r\n       -----------------------------------------------------------------------------------------------------------------------------------\r\n    Time synchronization      68220    MDC_TIME_SYNC_PROTOCOL\r       Certified PHD interfaces  532353   MDC_REG_CERT_DATA_CONTINUA_CERT_DEV_LIST       http://hl7.org/fhir/uv/phd/CodeSystem/ContinuaPHD\r\n"
    * text ^definition = "It is recommended to display at least the MDC reference identifier for the code"
  * valueQuantity ..0
  * valueCode 1..
    * ^short = "There shall be one valueCode entry for every item supported by the PHG in the list"
    * coding 1..
      * system 1..
        * ^definition = "Either the http://hl7.org/fhir/uv/phd/CodeSystem/ContinuaPHD or urn:iso:std:iso:11073:10101 code systems"
      * code 1..
        * ^definition = "One of the Continua interface certification codes"